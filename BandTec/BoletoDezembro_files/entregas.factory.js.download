/**
 * @license TOTVS | Portal - TOTVS Educacional v12.1.16
 * (c) 2015-2016 TOTVS S/A https://www.totvs.com
 * License: Comercial
 * @description
 */

define(['aluno/entregas/entregas.module'], function () {

    'use strict';

    angular
        .module('eduEntregasModule')
        .factory('eduEntregasFactory', EduEntregasFactory);

    EduEntregasFactory.$inject = ['$totvsresource'];

    function EduEntregasFactory($totvsresource) {

        var url = CONST_GLOBAL_URL_BASE_SERVICOS + 'TOTVSEducacional/:method',
            factory = $totvsresource.REST(url, {}, {});

        factory.findRecords = findRecords; // Busca todas as entregas
        factory.entregarArquivoAsync = entregarArquivoAsync; // entrega o arquivo do trabalho/avaliação
        factory.deletarArquivoAsync = deletarArquivoAsync; // deleta um arquivo entregue
        factory.atualizarArquivoAsync = atualizarArquivoAsync; // atualiza um arquivo entregue

        return factory;

        // *********************************************************************************
        // *** Functions
        // *********************************************************************************

        function findRecords(idTurmaDisc, startAt, limitAt, callback) {
            var pStart = startAt || 0,
                pLimit = limitAt || 0,
                parameters = {};

            parameters['method'] = 'EntregasAluno';
            parameters['idTurmaDisc'] = idTurmaDisc;
            parameters['start'] = pStart;
            parameters['limit'] = pLimit;

            return factory.TOTVSQuery(parameters, callback);
        }

        function entregarArquivoAsync(idTurmaDisc, codEtapa, tipoEtapa, codProva,
                                      nomeArquivo, tamanhoArquivo, observacao, arrayBinario, callback) {
            var parameters = {
                method: 'EntregaAvaliacao/UploadArquivo'
            },
            model = {
                idTurmaDisc: idTurmaDisc,
                codEtapa: codEtapa,
                tipoEtapa: tipoEtapa,
                codProva: codProva,
                nomeArquivo: nomeArquivo,
                tamanhoArquivo: tamanhoArquivo,
                observacao: observacao,
                arquivo: arrayBinario
            };

            return factory.TOTVSSave(parameters, model, callback);
        }

        function deletarArquivoAsync (idControleEntrega, callback) {
            var parameters = {
                method: 'EntregaAvaliacao/UploadArquivo',
                idControleEntrega: idControleEntrega
            };

            return factory.TOTVSRemove(parameters, callback);
        }

        function atualizarArquivoAsync(idControleEntrega, nomeArquivo, tamanhoArquivo, arrayBinario, observacao, callback) {
            var parameters = {
                method: 'EntregaAvaliacao/UploadArquivo',
                idControleEntrega: idControleEntrega
            },
            model = {
                nomeArquivo: nomeArquivo,
                tamanhoArquivo: tamanhoArquivo,
                arquivo: arrayBinario,
                observacao: observacao
            };

            return factory.TOTVSUpdate(parameters, model, callback);
        }
    }
});
